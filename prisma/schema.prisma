generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users

model User {
  id        Int         @id @default(autoincrement())
  name      String
  email     String
  user_auth User_Auth?
  character Character[]

  @@unique([id, email])
  @@map("users")
}

model User_Auth {
  user          User   @relation(fields: [user_id, email], references: [id, email])
  user_id       Int
  email         String
  password_hash String

  @@unique([user_id, email])
  @@map("user_auth")
}

// Characters

model Character {
  user             User             @relation(fields: [user_id], references: [id])
  id               Int              @id @default(autoincrement())
  user_id          Int
  name             String
  class            String
  level            Int
  attributes       Attribute?
  attack           Attack[]
  defense          Defense?
  character_skills CharacterSkill[]

  @@unique([user_id])
  @@map("characters")
}

model Attribute {
  character    Character @relation(fields: [character_id], references: [id])
  character_id Int
  strength     Int
  dexterity    Int
  constitution Int
  intelligence Int
  wisdom       Int
  charisma     Int

  @@unique([character_id])
  @@map("attributes")
}

model Defense {
  id            Int       @id @default(autoincrement())
  character     Character @relation(fields: [character_id], references: [id])
  character_id  Int       @unique
  slot1_name    String
  slot1_defense Int
  slot1_penalty Int
  slot2_name    String
  slot2_defense Int
  slot2_penalty Int
  attribute     String
  use_atribute  Boolean
  other         Int

  @@map("defenses")
}

model Attack {
  character           Character @relation(fields: [character_id], references: [id])
  character_id        Int
  name                String
  attack_bonus        Int
  damage              String
  extra_damage        Int
  damage_type         String
  damage_attribute    String
  extra_dices         Int
  critical            Int
  critical_type       String
  critical_multiplier Int
  range               String

  @@unique([character_id])
  @@map("attacks")
}

model CharacterSkill {
  character    Character @relation(fields: [character_id], references: [id])
  character_id Int

  skill     Skill   @relation(fields: [skill_id], references: [id])
  skill_id  Int
  trained   Boolean
  attribute String
  others    Int

  @@unique([character_id, skill_id])
  @@map("character_skills")
}

// Static

model Skill {
  id               Int              @id @default(autoincrement())
  name             String
  trained          Boolean
  penalty          Boolean
  character_skills CharacterSkill[]

  @@map("skills")
}
